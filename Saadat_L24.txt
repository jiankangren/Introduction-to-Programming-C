//problem 1
#include <stdio.h>

void writeln(char *letters) {

	while (*letters != '\0') {

		putchar(*letters);
		letters++;
	}

	putchar('\n');
}

void writeln1(char letters[]) {
	int i = 0, counter = 0;
	while (letters [i] != '\0'){
		counter++;
		i++;
	}
	for (i = 0; i < counter; i++){
	printf("%c", letters[i]);
	}
	putchar('\n');
}

int main( ) {

	char arr[] = "abcdef";
	char *ptr = "ghijklmnop";

	writeln(arr);
	writeln(ptr);
	writeln("qrstuv");

	writeln1(arr);
	writeln1(ptr);
	writeln1("qrstuv");

	return 0;
}

//problem 2

#include <stdio.h>

void stringCopy(char *fromStr, char *toStr) {
	while (*fromStr != '\0'){
		*toStr = *fromStr;
		toStr++;
		fromStr++;
		 }
	*toStr = '\0';
}

_Bool areEqual(char *str1, char *str2) {
	_Bool equality;

	 while (*str1!= '\0' && *str2!= '\0') {
		 if (*str1== '\0' && *str2!= '\0'){
			 equality = 0;
		 }
		 if (*str1!= '\0' && *str2== '\0'){
			 equality = 0;
		 }
		 if (*str1 == *str2){
			 equality = 1;
		 } else {
			 equality = 0;
		 }
		 str1++;
		 str2++;
	 }

	return equality;
}

void reverse(char *fromStr, char *toStr) {

	while (*fromStr != '\0'){
		fromStr++;
	}
	fromStr--;

	while (fromStr > toStr){
		*toStr = *fromStr;
		toStr++;
		fromStr--;
	}
		*toStr = '\0';
}

/* It works without X in the end of the second string*/
/*void reverse(char *fromStr, char *toStr) { 
	int stringLength = 0; 
	while (fromStr[stringLength] != '\0') { 
		stringLength++; 
	} 
	stringLength--; 
	int i; 
	for (i = stringLength; i >= 0; i--) { 
		*(toStr + (stringLength - i)) = *(fromStr + i); 
	} 
} */

void concatenate(char *str1, char *str2, char *resultStr){

	stringCopy (str1, resultStr);

	while (*str1 != '\0'){
			resultStr++;
			str1++;
	}

while (*str2 != '\0'){
		*resultStr = *str2;
		resultStr++;
		str2++;
		}

	*resultStr = '\0';

}

int main(void) {

	char word1[] = "Hello";
	char word2[] = "Hi there";
	char word3[] = {'H', 'e', 'l', 'l', 'o', '\0', 'X'};
	char word4[] = "Hi";

	char result[50];

	// Test code for stringCopy
	stringCopy(word1, result);
	printf("Test 1.1 result: %s\n", result);
	stringCopy(word2, result);
	printf("Test 1.2 result: %s\n", result);
	stringCopy(word3, result);
	printf("Test 1.3 result: %s\n", result);

	// Test code for areEqual
	printf("Test 2.1 result: %i\n", areEqual(word1, word2));
	printf("Test 2.2 result: %i\n", areEqual(word1, word3));
	printf("Test 2.3 result: %i\n", areEqual(word2, word4));
	printf("Test 2.4 result: %i\n", areEqual(word4, word2));

	// Test code for reverse
	reverse(word1, result);
	printf("Test 3.1 result: %s\n", result);
	reverse(word2, result);
	printf("Test 3.2 result: %s\n", result);
	reverse(word3, result);
	printf("Test 3.3 result: %s\n", result);


	// Test code for concatenate
	concatenate(word1, word2, result);
	printf("Test 4.1 result: %s\n", result);
	concatenate(word3, word4, result);
	printf("Test 4.2 result: %s\n", result);
	concatenate(word1, word1, result);
	printf("Test 4.3 result: %s\n", result);

	return 0;
}
